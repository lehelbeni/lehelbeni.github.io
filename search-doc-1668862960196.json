[{"title":"Documentation Init","type":0,"sectionRef":"#","url":"/docs/docs/Documentation/main","content":"Documentation Init","keywords":""},{"title":"hey","type":0,"sectionRef":"#","url":"/docs/docs/intro","content":"hey","keywords":""},{"title":"intro","type":0,"sectionRef":"#","url":"/docs/neurosurgery/intro","content":"intro","keywords":""},{"title":"How to deploy your websites","type":0,"sectionRef":"#","url":"/docs/webdev/DevOps/deploying-your-site","content":"How to deploy your websites","keywords":""},{"title":"Introduction","type":0,"sectionRef":"#","url":"/docs/intro","content":"Introduction","keywords":""},{"title":"Creating a development server","type":0,"sectionRef":"#","url":"/docs/webdev/DevOps/creating-development-server","content":"","keywords":""},{"title":"Available Technologies​","type":1,"pageTitle":"Creating a development server","url":"/docs/webdev/DevOps/creating-development-server#available-technologies","content":"The main tools that you can use to create automatic deployment on your website are Jenkins Docker Container "},{"title":"The building of the project​","type":1,"pageTitle":"Creating a development server","url":"/docs/webdev/DevOps/creating-development-server#the-building-of-the-project","content":"The main problem at the time is serving the static website directly from the backend sever and working together. "},{"title":"Configuring .env file​","type":1,"pageTitle":"Creating a development server","url":"/docs/webdev/DevOps/creating-development-server#configuring-env-file","content":"The first step you need to take is to configure the .env file both in client and server configuration. so the client config will look like this  { //API REACT_APP_API: 'http://localhost:4000', // HOST HOST_API_KEY: 'https://api-dev-minimal-v4.vercel.app', // MAPBOX MAPBOX_API: '', // FIREBASE FIREBASE_API_KEY: '', FIREBASE_AUTH_DOMAIN: '', FIREBASE_PROJECT_ID: '', FIREBASE_STORAGE_BUCKET: '', FIREBASE_MESSAGING_SENDER_ID: '', FIREBASE_APPID: '', FIREBASE_MEASUREMENT_ID: '', // AWS COGNITO AWS_COGNITO_USER_POOL_ID: '', AWS_COGNITO_CLIENT_ID: '', // AUTH0 AUTH0_DOMAIN: '', AUTH0_CLIENT_ID: '', }  "},{"title":"The​","type":1,"pageTitle":"Creating a development server","url":"/docs/webdev/DevOps/creating-development-server#the","content":""},{"title":"NGNIX","type":0,"sectionRef":"#","url":"/docs/webdev/DevOps/NGINX","content":"","keywords":""},{"title":"Serving a static webpage​","type":1,"pageTitle":"NGNIX","url":"/docs/webdev/DevOps/NGINX#serving-a-static-webpage","content":"When you have the server and the client page build, you have to "},{"title":"The essentials","type":0,"sectionRef":"#","url":"/docs/webdev/intro","content":"","keywords":""},{"title":"Seting up a development server​","type":1,"pageTitle":"The essentials","url":"/docs/webdev/intro#seting-up-a-development-server","content":""},{"title":"GitHub Cheat sheet","type":0,"sectionRef":"#","url":"/docs/webdev/DevOps/git","content":"","keywords":""},{"title":"Initialising a new .git directory​","type":1,"pageTitle":"GitHub Cheat sheet","url":"/docs/webdev/DevOps/git#initialising-a-new-git-directory","content":""},{"title":"…or create a new repository on the command line​","type":1,"pageTitle":"GitHub Cheat sheet","url":"/docs/webdev/DevOps/git#or-create-a-new-repository-on-the-command-line","content":"echo &quot;# Title Page&quot; &gt;&gt; README.md git init git add README.md git commit -m &quot;first commit&quot; git branch -M main git remote add origin https://github.com/lehelbeni/&lt;reponame.git&gt; git push -u origin main  "},{"title":"…or create a new repository on the command line​","type":1,"pageTitle":"GitHub Cheat sheet","url":"/docs/webdev/DevOps/git#or-create-a-new-repository-on-the-command-line-1","content":"git remote add origin https://github.com/lehelbeni/new.git git branch -M main git push -u origin main  "},{"title":"Share and Update​","type":1,"pageTitle":"GitHub Cheat sheet","url":"/docs/webdev/DevOps/git#share-and-update","content":"# add a git URL as an alias git remote add [alias] [url] # fetch down all the branches from that Git remote git fetch [alias] # merge a remote branch into your current branch to bring it up to date git merge [alias]/[branch] # Transmit local branch commits to the remote repository branch git push [alias] [branch] # fetch and merge any commits from the tracking remote branch git pull  "},{"title":"Setup and Init​","type":1,"pageTitle":"GitHub Cheat sheet","url":"/docs/webdev/DevOps/git#setup-and-init","content":"Configuring information, initializing and cloning repositories git init git clone [url]  "},{"title":"Stage and Snapshot​","type":1,"pageTitle":"GitHub Cheat sheet","url":"/docs/webdev/DevOps/git#stage-and-snapshot","content":"Working with snapshots and the Git staging area. # show modified files in working directory, staged for your next commit git status # add a file as it looks now to your next commit (stage) git add [file] # unstage a file while retaining the changes in working directory git reset [file] # diff of what is changed but not staged git diff # commit your staged content as a new commit snapshot git commit -m &quot;[descriptive message]&quot;  "},{"title":"Branch and Merge​","type":1,"pageTitle":"GitHub Cheat sheet","url":"/docs/webdev/DevOps/git#branch-and-merge","content":"Isolating work in branches, changing context, and integrating changes # list your branches. a * will appear next to the currently active branch git branch # create a new branch at the current commit git branch [branch-name] # switch to another branch and check it out into your working directory git checkout # merge the specified branch’s history into the current one git merge [branch] # show all commits in the current branch’s history git log  "},{"title":"Setup​","type":1,"pageTitle":"GitHub Cheat sheet","url":"/docs/webdev/DevOps/git#setup","content":"Configuring user information used across all local repositories # set a name that is identifiable for credit when review version history git config --global user.name “[firstname lastname]” # set an email address that will be associated with each history marker git config --global user.email “[valid-email]” # set automatic command line coloring for Git for easy reviewing git config --global color.ui auto  "},{"title":"Docusaurus","type":0,"sectionRef":"#","url":"/docs/webdev/docusaurus","content":"","keywords":""},{"title":"Creating a docusaurus docuemntation​","type":1,"pageTitle":"Docusaurus","url":"/docs/webdev/docusaurus#creating-a-docusaurus-docuemntation","content":""},{"title":"Publish Docusaurus to GitHub Pages​","type":1,"pageTitle":"Docusaurus","url":"/docs/webdev/docusaurus#publish-docusaurus-to-github-pages","content":"Create new Git Repository and git push origin main the new git repo Edith docusaurus.config.js  title: &quot;lehelbeni.md&quot;, tagline: &quot;Dinosaurs are cool&quot;, url: &quot;https://lehelbeni.github.io&quot;, baseUrl: &quot;/&quot;, onBrokenLinks: &quot;throw&quot;, onBrokenMarkdownLinks: &quot;warn&quot;, favicon: &quot;img/favicon.ico&quot;, // GitHub pages deployment config. // If you aren't using GitHub pages, you don't need these. organizationName: &quot;lehelbeni&quot;, // Usually your GitHub org/user name. projectName: &quot;lehelbeni.github.io&quot;, // Usually your repo name. deploymentBranch: &quot;gh-pages&quot;,  "},{"title":"Building and deploying to github pages​","type":1,"pageTitle":"Docusaurus","url":"/docs/webdev/docusaurus#building-and-deploying-to-github-pages","content":"First ajust the settings in the project directory Settings-&gt;Pages-&gt; deploy from branch -&gt; gh-pages "},{"title":"Updating the documentation is done by the following command​","type":1,"pageTitle":"Docusaurus","url":"/docs/webdev/docusaurus#updating-the-documentation-is-done-by-the-following-command","content":"git add . git commit -m &quot;Update&quot; git push origin main GIT_USER=lehelbeni yarn deploy  "},{"title":"Adding Searh to your docusaurus site​","type":1,"pageTitle":"Docusaurus","url":"/docs/webdev/docusaurus#adding-searh-to-your-docusaurus-site","content":"Install this package npm i docusaurus-lunr-search --save  Then run npm install to update, build, and link the packages npm install  Add the docusaurus-lunr-search plugin to your docusaurus.config.js module.exports = { // ... plugins: [require.resolve('docusaurus-lunr-search')], }  Then run docusaurus swizzle npm run swizzle docusaurus-lunr-search SearchBar -- --eject --danger  Then build your Docusaurus project npm run build  Serve your application npx http-server ./build  "}]